# If enabled APRS2RRD will put more information on console output
Debug = false;

# If enabled APRS2RRD will print everything to text log file instead of cout
DebugToFile = true;

# The path to output log file. Application will also create second one with .err extension
# where stderr will be put
DebugLogFile = "/home/aprs/skrzyczne/bin/debug.log"

# Station name must be always set, although it is used mainly for MySQL client to put data there.
# The idea is that APRS2RRD can mix data from different sources and then use that result as sometinhg,
# which is stored in RRD, MySQL, presented to a user etc. Addmitedly single callsing cannot be used  
# as an identifier in such case.
StationName = "skrzyczne";

# Locale which will be used to print any dates and times on generated RRD plots and HTML website
DatetimeLocale = "pl_PL.UTF-8";

# Used to force APRS2RRD to run in batch mode instead of continous. Behaviour
# in batch mode depends on which data sources are enabled. If APRS-IS or serial
# port KISS client is used, APRS2RRD will wait for first valid frame received 
# from internet or connected TNC, do the rest of processing and then close.
# 
# If only Davis Weatherlink and/or Holfuy client is used, batch mode will
# be enabled automatically. In that situation APRS2RRD will send HTTP request
# to API, get the data, do the rest and exit.  
#
# In non-batch, aka 'Continous Mode' APRS2RRD will establish a connection to
# an APRS-IS server and receive incoming packets in the loop. If the connection
# will stall or it will be explicilty disconnected by a server, APRS2RRD will
# reestablish it. In simmilar way, if KISS serial client is enabled 
# the application will open the port and wait for incoming data. If Davis
# Weatherlink client and/or Holfuy client is enabled along with APRS-IS/serial
# there APIs will be queried just after new data will be received
BarchMode = false;

# MySQL client configuration. Only non-trivial parameters are described
MySQL = {
	Enable = true;
	Port = 3306;
	IpAddress = "127.0.0.1";
	DbName = "aprs2rrd";
	DbUser = "aprs2rrd";
	DbPassword = "qwertyuiop";
	DbTable = "skrzyczne";		# This is a name for a table created from 'schema_v1.sql' template
	ExecBeforeInsert = true;	# APRS2RRD can execute external shell script before put data into MySQL
	ExecBeforeInsertPath = "/home/aprs/skrzyczne/rc.preinsert"
	SchemaV1 = true;		# If data should be put into table pointed by DbTable option
	SchemaV2 = true;		# If data should be put into one, global for all station table, which
							# must be named 'data_station' and be created from template 'schema_v2.sql'
	DumpHolfuy = false;	# Dump data from Holfuy API into separate table (not yet implemeted - TODO)
	DumpDiff = true;	# Dump differential measurements into separate table 'data_diff' from 'schema_v2.sql'
	DumpTelemetry = true;	# Dump telemetry intro separate table 'data_telemetry' from 'schema_v2.sql'

};

# APRS-IS text protocol client configuration
AprsIS = {
	Enable = true;	# If APRS-IS client (or serial port) is enabled APRS2RRD works in
					# so called 'interactive mode'. It starts, then connects to the server
					# and then reveive every incoming packet in the loop. Connection is 
					# automatically reconnected if it stalls. Application exits only on
					# user request or as a result of hard crash. 
					#
					# If only Weatherlink or Holfuy client is enabled, w/o APRS-IS client 
					# APRS2RRD works in batch mode. It gets data from configured APIs, do the
					# rest and exits at the end.
	StationCall = "SR9NSK";
	StationSSID = 1;
	ServerAddr = "euro.aprs2.net";
	ServerPort = 14580;
	MyCALL = "SR8WXO";	# How APRS2RRD presents itself to the server
	MyPasswd = 12345;	# password doesn't need to be valid and the app doesn't sent anything to the server
	SecondaryCall = "SR9NSK";	# APRS2RRD can monitor one or two weather stations. At least one must be configured
	SecondarySSID = 2;		# Secondary one is optional
};

# KISS Serial protocol client configuration
Serial = {
	Enable = false;
	Port = "/dev/ttyUSB0";
	Baudrate = 9600;
	CaptureAll = true;	# If this is enabled APRS2RRD will use any weather data coming from the serial port, 
						# ignoring source callsign
	StationCall = "SP8EBC";		# Source callsign for data to be used if 'CaptureAll' is disabled
	StationSSID = 1;			# Source SSID for data to be used
};

# Holfuy weather stations API client
Holfuy = {
	Enable = false;
	StationId = 1161;
	ApiPassword = "ccccXXXXXXX";
	DumpIntoMysql = false;	# Currently not implemented
};

# Davis weatherlink API client configuration
DavisWeatherlink = {
    Enable = false;
    DID = "001D0A00C5C3";		# Weather station identifier
    ApiPassword = "xxxxx";
    ApiToken = "DEADBEEF000DEADBEEF";
};

# Å»ywiec county weather system 
ZywiecMeteo = {
	BaseUrl = "https://monitoring.zywiec.powiat.pl/"
	StationId = 511;
	Enabled = false;
};


# APRX rf-log file parser
# It cannot be used along APRS-IS client and kiss serial protocol client! If enabled this function
# forces batch mode operation. To use this You must have date_time_zonespec.csv in the same
# directory where APRS2RRD is located! You can find this file in ./doc/ directory in the source code repo
AprxLogParser = {
	Enable = false;
	LogFile = "aprx-rf.log";
	LogTimeInLocal = true;	# rf-log file doesn't save any information about timezone in which 
							# records timestamps are stored. Typically this is a timezone set for
							# a user APRX runs as. The unfortunate consequence of that is an assumption
							# being made, that APRS2RRD runs in the same TZ as APRX. If this is not a case
							# data may be inserted into MySQL and RRD file with wrong timestamps.
							# If this option is not set, APRS2RRD internally assumes that it is set to true.
	Callsign = "SR9NSK";
	Ssid = 1;
	BatchLoadMode = true;	# APRX rf-log parser may run in, so called 'Batch Mode' in which it will
							# fetch any records within given timestamp range, instead of 'non Batch Mode'
							# when it fetch record not older than 'MaximumPacketAge' minutes from now. 
							# 
							# IMPORTANT NOTICE: when the Batch Mode is enabled You should not start 
							#					APRS2RRD more than once with the same settings. 
							#					Otherwise it will put the same data twice into MySQL
							#					and a result corrupt data integrity
							# IMPORTANT NOTICE 2: Timestamps for Batch Load mode **must** have LL postfix
	BatchLoadFromTimestamp = 1703405792LL; 	# Your time zone: Sunday, 24 December 2023 09:16:32 GMT+01:00
	BatchLoadToTimestamp = 1703484192LL; 	# Your time zone: Monday, 25 December 2023 07:03:12 GMT+01:00
	MaximumPacketAge = 5;		# How old logfile record may be to be used in non Batch Mode mode
								# ideally this shall be set to time interval APRS2RRD is started from cron
}


# Configures sources for each weather parameter. Options are
#	AprsIS				- Configured in 'AprsIS' by 'StationCall' and 'StationSSID'
#	SecondaryAprsIS		- Configured in 'AprsIS' by 'SecondaryCall' and 'SecondarySSID'
#	Telemetry - currently not usable due to refactoring pending
#	Serial
#	Holfuy
#	Zywiec
#	Davis
# data from these sources are then put into MySQL database, RRD files and they are used
# to generate static HTML page
Sources = {
	Temperature = "AprsIS";
	Wind = "Holfuy";
	Pressure = "AprsIS";
	Humidity = "AprsIS";
	Rain = "AprsIS";
	BackupForEverything = "AprsIS";
};

# Slew limiter configuration. After the first weather frame is received, APRS2RRD starts to 
# limit differences between two consecutive frame received. If any parameter differs more 
# than values here, the difference will be set to those. 
#
# There are some default values used if any of those are not configured:
# 	Temperature		3 degrees celsius
#	Pressure		5 hPa
#	Humidity		2 %
#	WindSpeed		5 m/s
#	WindGusts		12 m/s
SlewLimit = {
	Temperature = 0.4;
	Pressure = 5.0;
	WindSpeed = 5.0;
	WindGusts = 12.0;
};

# Pressure calculator, which can convert between QNH <-> QFE in both directions. 
# QNH is a pressure recalculated to sea level and this is what is normally used
# and ment as a pressure in general meaing. QFE is pressure measured by a station
# on an altitude it is installed. To do this converstion APRS2RRD must know that 
# altitude. To disable this function just comment out that section completely 
Pressure = {
        StationMeasures = "QFE";
        ConvertTo = "QNH";
        Altitude = 1250;
};

# APRS2RRD  can calculate a differences between two different sources, even if 
# those are not used in 'Sources' section. These differences are then put
# into separate table in MySQL DB, and may be presented on generated HTML
Diffs = {
	Enable = true;
	TemperatureFrom = "AprsIS";
	TemperatureSubtract = "Holfuy";
	WindFrom = "AprsIS";
	WindSubtract = "Holfuy";
};

# Configuration of all RRD files, which will be used by the application to store
# data in and then generate plots from. You can specify more files than parameters,
# which means that for instance temperature may be stored in more than one file
# than one. At least one must be defined for proper operation.
# 
# Avilable types are:
# 	WIND_DIR
#	WIND_SPD
#	WIND_GST
#	TEMPERATURE
#	QNH
#	HUMIDITY
#	DIFF_TEMPERATURE	- Product of Diff calculator
#	DIFF_WIND_SPD		- Product of Diff calculator
#	DIFF_WIND_GST		- Product of Diff calculator
#	DIFF_WIND_DIR		- Product of Diff calculator
RRD = (
	{
		Type = "TEMPERATURE";
		Path = "./test_wdir/temperatura2.rrd";
	},
	{
		Type = "QNH";
		Path = "./test_wdir/cisnienie.rrd";
	},
	{
		Type = "WIND_SPD";
		Path = "./test_wdir/predkosc.rrd";
	},
	{
		Type = "WIND_GST";
		Path = "./test_wdir/szkwaly.rrd";
	},
	{
		Type = "WIND_DIR";	
		Path = "./test_wdir/kierunek.rrd";
	},
	{
		Type = "DIFF_WIND_SPD";
		Path = "./test_wdir/diff_predkosc.rrd";
	},
	{
		Type = "DIFF_WIND_GST";
		Path = "./test_wdir/diff_szkwaly.rrd";	
	},
	{
		Type = "DIFF_WIND_DIR";
		Path = "./test_wdir/diff_kierunek.rrd";		
	},
	{
		Type = "DIFF_TEMPERATURE";
		Path = "./test_wdir/diff_temperatura.rrd";		
	},
	{
		Type = "HUMIDITY";
		Path = "./test_wdir/wilgotnosc.rrd";		
	}

);

# Section, which configures how plots should be generated from RRD files. Please
# refer to RRD tool manual and './doc/rrd-create-script/rc.generate' script for
# more reference about meaning of certain options. Most of these configuration 
# settings justs passes parameters into RRD plot command
# 
# external links: https://oss.oetiker.ch/rrdtool/doc/rrdcreate.en.html
Plots = (
	# This one section below draws a plot from RRD file created using that command
	#
	# rrdtool create temperatura.rrd --start N --step 240 DS:temperatura:GAUGE:300:U:U RRA:AVERAGE:0.5:1:950
	{
		# This configures how data are plotted into output plot. Maybe
		# naming may be better here, but there are only two options
		# to choose from.
		#
		#	WIND_DIR - Line plot with one or two sources 
		#	WIND_SPD_GST - Area plot from one source 'growing' from zero line on Y axis
		Type = "WIND_SPD_GST";
		Path = "./test_wdir/temperaturaqnh.png";	# Graphic file with output plot
		DS0 = "./test_wdir/temperatura2.rrd";	# Source data file
		DS0Name = "temperatura";	# Data source name set during creation of rrd file
		DS0RRAType = "AVERAGE";		# Round robin archive type to use for drawing a plot
		DS0PlotType = "AREA";		# AREA or LINE2
		DS0PlotColor = 0xFF9900;
		DS0Label = "Temperatura";	# Label to be printed on a plot
		Title = "Temperatura na szczycie";
		Width = 1100;
		Height = 450;
		Axis = "Stopnie C";	# Label to be printed on axis
		MinScale = -20.0;
		MaxScale = 35.0;
		TimeScaleLen = 6000; # Time scale lenght, which also automatically controls
							 # spacing and resolution od X axis labels
	},
	{
		Type = "WIND_SPD_GST";
		Path = "./test_wdir/predkosc.png";
		DS0 = "./test_wdir/predkosc.rrd";
		DS0Name = "predkosc";
		DS0RRAType = "AVERAGE";
		DS0PlotType = "AREA";
		DS0PlotColor = 0xFF0000;
		DS0Label = "Predkosc";
		DS1 = "./test_wdir/szkwaly.rrd";
		DS1Name = "szkwaly";
		DS1RRAType = "AVERAGE";
		DS1PlotType = "LINE2";
		DS1PlotColor = 0x0000FF;
		DS1Label = "Porywy";
		Title = "PrÄdkoÅÄ wiatru na szczycie";
		Width = 1100;
		Height = 600;	
		Axis = "m/s";
		MinScale = 0.1;
		MaxScale = 25.0;
		TimeScaleLen = 1320;	# 1000
	}
);

# Banner creator configuration
BannerCreator = {
        Enable = true;
        AssetsDirectory = "./"	# directory where APRS2RRD will look for source PNG files 
								# (windrose.png and arrow.png)
        OutputFile = "/home/www-server/bezmiechowa/baner.png"
        TransparentBackground = true;
        BlackOrWhiteBackground = false;	# Important only if non transparent background is chosen
        DrawRunway = true;	# Draw green rectangle in the background, which resemble a runway
        RumwayDirection = 220;

		# Actually fonts used to generate banner are hardcoded into the source code.
		#
		# Application expects '/usr/share/fonts/truetype/digital-7/digital-7 (mono).ttf'
		# for drawing average windspeed value (that big 7-segment-style text in the middle).
		# You can find that font in './doc/banner-generator/' directory in the repo.
		#
		# Application also expects '/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf'
		# to draw "Avg. Windspeed [m/s] text" 
};

# Static HTML page generator configuration. 
Website = {
	# Output HTML file. Please note that the output directory shall also contains
	# CSS files from './doc/css-styles-for-generated-html/' depends on if 
	# colorfulResultTable option is enabled or not
	IndexHtml = "./test_wdir/index.html";
	Plot0 = "temperaturaqnh.png";
	Plot1 = "predkosc.png";
	Plot2 = "kierunek.png";
	Plot3 = "diff_wiatr.png";
	Plot4 = "wilgotnosc.png";
	Title = "HTML page title";
	colorfulResultTable = true;		# Little graphic gimmick. Table with results will be blue-tinted
									# if temeprature is below zero celsius or green if positive temperature
	HeadingTitle = "Stacja pogodowa SR9NSK -- GÃ³ra Skrzyczne";

	# Sub heading is located below results table and above first plot. You can paste HTML tags here and 
	# they will be put into output HTML file
	SubHeading = "<br>Odczyty dostÄpne rÃ³wnieÅ¼ w aplikacji mobilnej <a href=\"https://play.google.com/store/apps/details?id=cc.pogoda.mobile.meteosystem\">Meteo System</a>";
	LinkToMoreInfo = false;	# Additional, hardcoded link to info.html placed between results table (or Subheading) and first plot
	Footer = "This is placed at the bottom of the HTML, after last plot";

	# Results table may consist data from one or two different sources depends on this setting
	# Primary source, which is used in singled mode, or used as a left one in dual mode is ALWAYS
	# data configured in 'Sources' section of this file
	PrintTwoSourcesInTable = true;	
	SecondarySource = "Holfuy";	# Secondary source in two-sources mode. Please refer to comment over 'Sources'
	SecondaryLabel = "Startowisko E";

	# Controls which parameters will be displayed inside results table.  Available options are:
	#	'true' or 'both'	- print in one source mode or print in both columns of two source mode
	#	'left' or 'primary'		- print in left column in two-source mode
	#	'right' or 'secondary' 	- print in right column in two-source mode
	#	'false' or 'off'	- do not print at all in one and two source table  
	PrintPressure = "left";
	PrintTemperature = "both";
	PrintHumidity = "left";
	PrimaryLabel = "Szczyt";
};

# Localization strings for generated HTML page
LocaleStaticStrings = {
        generatedBy = "This page has been generated by";	# 'APRS2RRD' string is appended automatically!
        generatedBy2 = "in version";
        humidity = "Humidity";
        lastUpdate = "Last update at: ";
        moreInfo = "More information";
        pressure = "Atmospheric pressure";
        temperature = "Temperature";
        windDirection = "Wind direction";
        windGusts = "Maximum windspeed gust";
        windSpeed = "Average wind speed";


};
